using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
//Bibliotecas que eu adicionei
using WMPLib;

namespace As_aventuras_do_ETEQUER
{
    public partial class ControlPanel : Form
    {
        #region Variaveis
        //analisa a posição do formulário para saber se estão todos alinhados
        static public int ThisCheckLeft, ThisCheckTop;
        //Verifica se o formulario já esta ativo
        static public bool IAmStarted = false;
        //Serve para saber se todos os formularios do jogo estão abertos.
        int NeedThreeOpened = 0;
        //Verifica se todos os arquivos á forão carregados
        static public bool IsAllLoaded = false;
        //Vê a posição do mouse dentro do formulario
        static public int MouseLeft, MouseTop;
        //É o valor aumentado na LoadBar depois de carregar cada arquivo
        int Porcent = 2;
        //Essa variavel serve para o Videos avisar o ControlPanel quando o video foi concluido
        static public bool IsFirstVideoFinished = false;
        //Essa variavel mostra o valor da velocidade do personagem
        static public int VELOCIDADE = 10;
        #endregion

        public ControlPanel()
        {
            InitializeComponent();
        }

        private void ControlPanel_Load(object sender, EventArgs e)
        {
            this.BringToFront();
            Updater.Enabled = true;
        }

        private void ControlPanel_KeyDown(object sender, KeyEventArgs e)
        {
            #region Fechando com o apertar de ESC
            if (e.KeyCode == Keys.Escape)
            {
                Application.Exit();
            }
            #endregion
            #region Fecha todo aplicativo caso aperte Alt + F4
            if (e.Alt && e.KeyCode == Keys.F4)
            {
                Application.Exit();
            }
            #endregion
            #region Fechando por outros métodos
            if (e.KeyCode == Keys.LWin || e.KeyCode == Keys.RWin || e.Alt && e.KeyCode == Keys.Tab)
            {
                Application.Exit();
            }
            #endregion
            #region Apertar espaço para sair do video
            if (e.KeyCode == Keys.Space)
            {
                foreach (Form IAmOpen in Application.OpenForms)
                {
                    if (IAmOpen is Videos)
                    {
                        Videos.WannaExit = true;
                    }
                }
            }
            #endregion
            #region COMANDOS
            if (e.KeyCode == MainMenu.Direita)
            {
                //Avisa que a ultima tecla a ser apertada é a Direita
                Jogo.UltimaTecla = MainMenu.Direita;
                //Envia o valor do que deve ser feito
                Jogo.WhereAreYouGoing = 1;

                //Faz o fundo mover
                Fundo.MoveBG = true;

                //Faz mover os itens, chão, paredes e inimigos
                Jogo.IsMoved = true;

                //Adiciona + 10 na localização do personagem
                Jogo.LocationCorrection = false;
            }
            else if (e.KeyCode == MainMenu.Esquerda)
            {
                //Avisa que a ultima tecla a ser apertada é a Esquerda
                Jogo.UltimaTecla = MainMenu.Esquerda;
                //Envia o valor do que deve ser feito
                Jogo.WhereAreYouGoing = 2;

                //Faz o fundo mover
                Fundo.MoveBG = true;

                //Faz mover os itens, chão, paredes e inimigos
                Jogo.IsMoved = true;

                //Retira 10 na localização do personagem
                Jogo.LocationCorrection = false;
            }
            else if (e.KeyCode == MainMenu.Pula)
            {
            }
            else if (e.KeyCode == MainMenu.Pause)
            {
            }
            #endregion
        }

        private void Updater_Tick(object sender, EventArgs e)
        {
            #region Análise de erros
            IAmStarted = true;
            ThisCheckLeft = this.Left;
            ThisCheckTop = this.Top;

            //verifica se os formularios estão iniciados
            if (Jogo.IAmStarted == true && Fundo.IAmStarted == true && ControlPanel.IAmStarted == true)
            {
                //Verifica se os formularios estão alinhados
                if (Jogo.ThisCheckLeft == Fundo.ThisCheckLeft && ControlPanel.ThisCheckLeft == Fundo.ThisCheckLeft)
                {
                }
                else
                {
                    Application.Exit();
                }

                if (Jogo.ThisCheckTop == Fundo.ThisCheckTop && ControlPanel.ThisCheckTop == Fundo.ThisCheckTop)
                {
                }
                else
                {
                    Application.Exit();
                }

                //verifica se todos os formulários estão abertos, caso contrário a aplicação é encerrada
                foreach (Form IsAllOpen in Application.OpenForms)
                {
                    if (IsAllOpen is ControlPanel)
                    {
                        NeedThreeOpened++;
                    }

                    if (IsAllOpen is Jogo)
                    {
                        NeedThreeOpened++;
                    }

                    if (IsAllOpen is Fundo)
                    {
                        NeedThreeOpened++;
                    }
                }

                if (NeedThreeOpened == 3)
                {
                    NeedThreeOpened = 0;
                }
                else
                {
                    Application.Exit();
                }
            }
            else
            {
            }
            #endregion
            #region Carregando arquivos
            if (IsAllLoaded == false)
            {
                //Carregando a imagem no fundo
                Fundo.ImagemDoFundo = Image.FromFile("Grafico//modone.bg"); //1
                LoadBar.Value = LoadBar.Value + Porcent;
                //Carregando a fonte dos números
                Jogo.Zero = Image.FromFile("Fonte//fontzero.numb"); //2
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Um = Image.FromFile("Fonte//fontone.numb"); //3
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Dois = Image.FromFile("Fonte//fonttwo.numb"); //4
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Tres = Image.FromFile("Fonte//fontthree.numb"); //5
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Quatro = Image.FromFile("Fonte//fontfour.numb"); //6
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Cinco = Image.FromFile("Fonte//fontfive.numb"); //7
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Seis = Image.FromFile("Fonte//fontsix.numb"); //8
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Sete = Image.FromFile("Fonte//fontseven.numb"); //9
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Oito = Image.FromFile("Fonte//fonteight.numb"); //10
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Nove = Image.FromFile("Fonte//fontnine.numb"); //11
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.HeadOfLives = Image.FromFile("Programa//Lifes.grf"); //12
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer1_DIR = Image.FromFile("Grafico//eter1_DIR.grf"); //13
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer2_DIR = Image.FromFile("Grafico//eter2_DIR.grf"); //14
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer3_DIR = Image.FromFile("Grafico//eter3_DIR.grf"); //15
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer1_DIR = Image.FromFile("Grafico//FW_eter1_DIR.grf"); //16
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer2_DIR = Image.FromFile("Grafico//FW_eter2_DIR.grf"); //17
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer3_DIR = Image.FromFile("Grafico//FW_eter3_DIR.grf"); //18
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer1_ESQ = Image.FromFile("Grafico//eter1_ESQ.grf"); //19
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer2_ESQ = Image.FromFile("Grafico//eter2_ESQ.grf"); //20
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.Etequer3_ESQ = Image.FromFile("Grafico//eter3_ESQ.grf"); //21
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer1_ESQ = Image.FromFile("Grafico//FW_eter1_ESQ.grf"); //22
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer2_ESQ = Image.FromFile("Grafico//FW_eter2_ESQ.grf"); //23
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FW_Etequer3_ESQ = Image.FromFile("Grafico//FW_eter3_ESQ.grf"); //24
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.LifeBAR_IMG_bg = Image.FromFile("Grafico//transparent.bg"); //25
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.LifeBAR_IMG = Image.FromFile("Grafico//lifebar.bg"); //26
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.YellowTile = Image.FromFile("Grafico//Tiles//MOD1.TIL"); //27
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_Tile = Image.FromFile("Reconhece//tile.IMA"); //28
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_CdBox = Image.FromFile("Reconhece//CdBox.IMA"); //29
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.GrayTile = Image.FromFile("Grafico//Tiles//MOD2.TIL"); //30
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.BlueTile = Image.FromFile("Grafico//Tiles//MOD3.TIL"); //31
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.CDbox = Image.FromFile("Grafico//Tiles//CD.BOX"); //32
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.CDitem = Image.FromFile("Grafico//Tiles//CD.ITM"); //33
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.DVDbox = Image.FromFile("Grafico//Tiles//DVD.BOX"); //34
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.DVDitem = Image.FromFile("Grafico//Tiles//DVD.ITM"); //35
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.PENbox = Image.FromFile("Grafico//Tiles//PEN.BOX"); //36
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.PENitem = Image.FromFile("Grafico//Tiles//PEN.ITM"); //37
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FWbox = Image.FromFile("Grafico//Tiles//FW.BOX"); //38
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FWitem_SPR1 = Image.FromFile("Grafico//Tiles//FW1.ITM"); //39
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.FWitem_SPR2 = Image.FromFile("Grafico//Tiles//FW2.ITM"); //40
                LoadBar.Value = LoadBar.Value + Porcent;
                //Jogo.IMAbox = Image.FromFile("Reconhece//box.IMA"); //41
                //LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_CdItem = Image.FromFile("Reconhece//CdItem.IMA"); //42
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_DvdBox = Image.FromFile("Reconhece//DvdBox.IMA"); //43
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_DvdItem = Image.FromFile("Reconhece//DvdItem.IMA"); //44
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_FwBox = Image.FromFile("Reconhece//FwBox.IMA"); //45
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_FwItem = Image.FromFile("Reconhece//FwItem.IMA"); //46
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.PENbox = Image.FromFile("Reconhece//PenBox.IMA"); //47
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.PENitem = Image.FromFile("Reconhece//PenItem.IMA"); //48
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_LifeBox = Image.FromFile("Reconhece//LifeBox.IMA"); //49
                LoadBar.Value = LoadBar.Value + Porcent;
                Jogo.IMA_LifeItem = Image.FromFile("Reconhece//LifeItem.IMA"); //50
                LoadBar.Value = 100;
                IsAllLoaded = true;

                //Abre o video depois que carregar, fazendo com que rode o video de numero 1
                Videos.WhoPlay = 1;
                Videos partC = new Videos();
                partC.Show();
                this.BringToFront();
            }
            else
            {
                LoadBar.Visible = false;
                CARREGANDO_txt.Visible = false;
                this.Opacity = 0.01;
            }
            #endregion
            #region Verifica a posição do mouse dentro do jogo
            //Isso serve para saber se o mouse esta dentro do botão de saida ou se ele o pressionou
            MouseLeft = Cursor.Position.X - this.Left;
            MouseTop = Cursor.Position.Y - this.Top;
            #endregion
            #region Inicia o jogo quando o video é concluido ou forçado a concluir
            if (IsFirstVideoFinished == true)
            {
                //Abre o jogo
                Fundo partA = new Fundo();
                Jogo partB = new Jogo();
                partA.Show();
                partB.Show();
                IsFirstVideoFinished = false;
                this.BringToFront();
            }
            #endregion
        }

        #region Ação do botão de saida
        private void ControlPanel_Click(object sender, EventArgs e)
        {
            if (MouseLeft >= (Jogo.ExitButton_left) && MouseLeft <= (Jogo.ExitButton_left + Jogo.ExitButton_width) && MouseTop >= (Jogo.ExitButton_top) && MouseTop <= (Jogo.ExitButton_top + Jogo.ExitButton_height))
            {
                Application.Exit();
            }
        }
        #endregion

        private void GameUpdater_Tick(object sender, EventArgs e)
        {
            #region Explicação deste Timer
            /* A diferença de um GameUpdater
             * para um Updater normal é que
             * ele transfere as informações
             * das teclas pressionadas para
             * controle do personagem, se
             * houver muitos comandos a serem
             * executados no mesmo Timer o
             * simples movimento do personagem
             * pode se tornar lento, por isso
             * é criado um novo Timer usado
             * unicamente para tranferir
             * informações de comandos do
             * jogo.*/
            #endregion
        }
    }
}